<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<!-- put your value object in the class name, 
		the table name is optional but you should specify it to avoid collisions -->
	<class
		name="org.sakaiproject.trainingsupport.model.TrainingRosterJobTitle"
		table="training_roster_job_title">

		<!-- create the primary key id, using native is typically the best way -->
		<id name="id" type="long">
			<generator class="native">
				<param name="sequence">training_ROSTER_ID_SEQ</param>
			</generator>
		</id>
		<property name="siteId" type="string" length="255" column="site_id" not-null="true"/>
		<property name="sectionId" type="string" length="255" column="section_id" not-null="true"/>
		<set
			name="jobTitles"
			table="training_roster_job_title_map"
			lazy="false">
			<key>
				<column name="training_roster_job_title_id" />
			</key>
			<many-to-many
				column="training_job_title_id"
				class="org.sakaiproject.trainingsupport.model.TrainingJobTitle"/>
		</set>
	</class>
	
	<query name="findRosterJobTitleBySectionId">
		<![CDATA[
		 from org.sakaiproject.trainingsupport.model.TrainingRosterJobTitle t
		      join fetch t.jobTitles jobTitles
		where t.sectionId = :sectionId and t.siteId = :siteId]]>
	</query>
</hibernate-mapping>

