<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<!-- put your value object in the class name, 
		the table name is optional but you should specify it to avoid collisions -->
	<class name="org.sakaiproject.trainingsupport.model.TrainingStatus"
			table="training_status">

		<!-- create the primary key id, using native is typically the best way -->
		<id name="id" type="long">
	    	<generator class="native">
                <param name="sequence">training_STATUS_ID_SEQ</param>
	    	</generator>
		</id>
		<property name="sakaiEid" type="string" length="99" column="sakai_eid" not-null="true" index="trainingStatusIndex"/>
		<property name="status" type="integer" column="status" not-null="true" />
		<property name="statusUpdateDate" type="java.util.Date" column="status_update_date"/>
		<many-to-one
			name="trainingRoster"
			class="org.sakaiproject.trainingsupport.model.TrainingRoster"
			not-null="true"
			index="trainingStatusIndex"
		>
			<column name="training_roster_id" />
		</many-to-one>
		<property name="enrollmentStatus" type="string" length="32" column="enrollment_status" />
		<property name="manuallyUpdated" type="boolean" column="manually_updated" />
		<property name="manuallyUpdateDate" type="java.util.Date" column="manually_update_date" />
		<property name="note" type="string" length="255" column="note" />
		<property name="listType" type="string" length="32" column="list_type" />
		<property name="listTypeUpdateDate" type="java.util.Date" column="list_type_update_date" />
	</class>
	<query name="findStatusesBySiteId">
	<![CDATA[from org.sakaiproject.trainingsupport.model.TrainingStatus trainingStatus
		left join fetch trainingStatus.trainingRoster trainingRoster
		where trainingRoster.sakaiSiteId = :siteId order by trainingStatus.statusUpdateDate desc]]>
  	</query>
	<query name="findStatuses">
	<![CDATA[from org.sakaiproject.trainingsupport.model.TrainingStatus trainingStatus
		left join fetch trainingStatus.trainingRoster trainingRoster
		where trainingRoster.sakaiSiteId = :siteId and trainingRoster.sakaiSectionId =:sectionId]]>
  	</query>
  	<query name="findStatusesByUserEid">
	<![CDATA[from org.sakaiproject.trainingsupport.model.TrainingStatus trainingStatus
		left join fetch trainingStatus.trainingRoster trainingRoster
		where trainingRoster.sakaiSiteId = :siteId and trainingStatus.sakaiEid = :userEid]]>
  	</query>
  	<query name="findStatusesByOnlyUserEid">
	<![CDATA[from org.sakaiproject.trainingsupport.model.TrainingStatus trainingStatus
		left join fetch trainingStatus.trainingRoster trainingRoster
		where trainingStatus.sakaiEid = :userEid]]>
  	</query>
  	<query name="findRosterListByListType">
  	<![CDATA[from org.sakaiproject.trainingsupport.model.TrainingStatus trainingStatus
		left join fetch trainingStatus.trainingRoster trainingRoster
		where trainingRoster.sakaiSiteId = :siteId and trainingRoster.sakaiSectionId = :sectionId and trainingStatus.listType = :listType]]>
  	</query>
	<query name="countRosterList">
	<![CDATA[select count(trainingStatus)
		from org.sakaiproject.trainingsupport.model.TrainingStatus trainingStatus
		left join trainingStatus.trainingRoster trainingRoster
		where trainingRoster.sakaiSiteId = :siteId and trainingRoster.sakaiSectionId = :sectionId and trainingStatus.listType = :listType]]>
	</query>
</hibernate-mapping>

