<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<!-- put your value object in the class name, 
		the table name is optional but you should specify it to avoid collisions -->
	<class name="org.sakaiproject.trainingsupport.model.TrainingRoster"
			table="training_roster">

		<!-- create the primary key id, using native is typically the best way -->
		<id name="id" type="long">
	    	<generator class="native">
                <param name="sequence">training_ROSTER_ID_SEQ</param>
	    	</generator>
		</id>
		<property name="sakaiSiteId" type="string" length="255" column="sakai_site_id" not-null="true"/>
		<property name="sakaiSectionId" type="string" length="255" column="sakai_section_id" not-null="true"/>
		<property name="insertDate" type="java.util.Date" column="insert_date" not-null="true"/>
		<property name="insertUserId" type="string" length="99" column="insert_user_id" not-null="true"/>
		<property name="updateDate" type="java.util.Date" column="update_date"/>
		<property name="updateUserId" type="string" length="99" column="update_user_id" />
		<set
			name="trainingStatuses"
			lazy="false"
			inverse="true"
			cascade="all"
		>
			<key>
				<column name="training_roster_id" />
			</key>
			<one-to-many
				class="org.sakaiproject.trainingsupport.model.TrainingStatus" not-found="ignore"
			/>
		</set>
	</class>
  	<query name="findRosterBySectionId">
	<![CDATA[from org.sakaiproject.trainingsupport.model.TrainingRoster trainingRoster
		left join fetch trainingRoster.trainingStatuses trainingStatus
		where trainingRoster.sakaiSectionId = :sectionId]]>
  	</query>
</hibernate-mapping>

